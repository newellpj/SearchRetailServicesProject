<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	 xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" 
	xsi:schemaLocation="http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context-4.1.xsd  
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd 
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd  
	http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
	
	 <bean id="authenticationSuccessHandlerWithoutReferer" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
    	<property name="useReferer" value="true" />
     </bean>
	
	   <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	    <property name="url" value="jdbc:mysql://localhost:3306/sakila"/>
	    <property name="username" value="root"/>
	    <property name="password" value="fdg78DSA78"/>
	   </bean>
	   

      <bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">

        <property name="brokerURL" value="vm://localhost?broker.persistent=false" />

    </bean>

    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
        init-method="start" destroy-method="stop">
        <property name="maxConnections" value="8" />
        <property name="connectionFactory" ref="jmsConnectionFactory" />

    </bean>
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="pooledConnectionFactory" />
    </bean>
    <camelContext xmlns="http://camel.apache.org/schema/spring">
        <route>
            <from uri="timer:foo?period=1s" />
            <transform>
                <simple>Heartbeat ${date:now:yyyy-MM-dd HH:mm:ss}</simple>
            </transform>
            <to uri="activemq:queue:in" />
        </route>
        <route>
            <from uri="activemq:queue:in" />
            <log message="Route message from in queue to out queue with data ${body}" />
            <to uri="activemq:queue:out" />
        </route>
        <route>
            <from uri="activemq:queue:out" />
            <log message="Print the message from out to console"/>
            <to uri="stream:out" />
        </route>
    </camelContext>
	   
	   <bean id="bookReviewsHibernateSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	   		<property name="dataSource" ref="dataSource" />
	   		<property name="packagesToScan" value="co.srsp.hibernate"/>
	   		<property name="mappingResources">
	   			<list>
	   				<value>hibernate/Users.hbm.xml</value>
	   				<value>hibernate/Authorities.hbm.xml</value>
	   				<value>hibernate/Books.hbm.xml</value>
	   				<value>hibernate/BookReviews.hbm.xml</value>
	   				<value>hibernate/BookTags.hbm.xml</value>
	   				<value>hibernate/NotificationSubscription.hbm.xml</value>
	   				<value>hibernate/TagTypes.hbm.xml</value>
	   			</list>
	   		</property>
	   		<property name="hibernateProperties">
	   			<props>
	   				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
	   				<prop key="hibernate.hbm2ddl.auto">update</prop>
	   				<prop key="hibernate.show_sql">true</prop>
	   			</props>
	   		</property>
	   </bean>
	   
	   <bean id="solrSearchManager" class="co.srsp.solr.SolrSearchManager">
	   		<property name="connectionString" value="http://localhost:8983/solr/booksandreviews" />
	   		<property name="solrFieldsList" value="author:title:id:stream_content_type" />
	   		<property name="mimetypeToThumbnailLocList" value="vnd.openxmlformats-officedocument.wordprocessingml.document:./presentationResources/images/worddoc.jpg,pdf:./presentationResources/images/pdficon.jpg,msword:./presentationResources/images/worddoc.jpg,rtf:./presentationResources/images/rtficon.png,txt:./presentationResources/images/texticon.png" />
	   </bean>
	   
  	 	<bean id="transactionManagerHibernate" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		  <property name="sessionFactory" ref="bookReviewsHibernateSessionFactory" />
	    </bean>
	    
	    <bean id="topicPublisherBean" class="co.srsp.jms.Publisher">  
		   <constructor-arg index="0" value="WebappPublisher"></constructor-arg>
		   <constructor-arg index="1" value="AllWebAppsNotifier"></constructor-arg>
	    </bean>
	    
	    <bean id="topicSubscriberSRSPBean" class="co.srsp.jms.DurableSubscriber">  
		   <constructor-arg index="0" value="topicSubscriberSRSP"></constructor-arg>
		   <constructor-arg index="1" value="AllWebAppsNotifier"></constructor-arg>
		   <constructor-arg index="2" value="topicSubscriberSRSPSubscriber1"></constructor-arg>
	    </bean>
   
  
		<bean id="loginController" class="co.srsp.controller.LoginController">  
		    <property name="defaultTargetUrl" value="/reviews" />
	    </bean>
   
   		<bean id="myAuthenticationSuccessHandler"  class="co.srsp.config.SimpleUrlAuthenticationSuccessHandler" />
 
    	<bean id="pushNotificationsController" class="co.srsp.controller.PushNotificationsController">  
	    </bean>
 
 		<bean id="solrAndDbSearchController" class="co.srsp.controller.SolrAndDbSearchingPageController">  
	    </bean>
	    
	    <bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
		    <property name="scopes">
		        <map>
		            <entry key="session">
		                <bean class="org.springframework.context.support.SimpleThreadScope"/>
		            </entry>
		        </map>
		    </property>
		</bean>
	    
	    <bean id="testController" class="co.srsp.controller.TestController">  
	    </bean>
	    
	    <bean id="feedsController" class="co.srsp.controller.FeedsController">  
	    </bean>
	    
	      <bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
			<constructor-arg name="strength" value="11" />
		   </bean>
	  
   	
   	
	   
	   <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
	   		<property name="sessionFactory" ref="bookReviewsHibernateSessionFactory" />
	   </bean>
	   
	   <bean id="usersBusinessObject" class="co.srsp.hibernate.UsersBusinessObjectImpl">
	   			<property name="sessionFactory" ref="bookReviewsHibernateSessionFactory"></property>	
	   </bean>
	   

	    <bean id="authoritiesBusinessObject" class="co.srsp.hibernate.AuthoritiesBusinessObjectImpl">
	   			<property name="sessionFactory" ref="bookReviewsHibernateSessionFactory"></property>	
	   </bean>
	   
	    <bean id="booksBusinessObject" class="co.srsp.hibernate.BooksBusinessObjectImpl">
	   			<property name="sessionFactory" ref="bookReviewsHibernateSessionFactory"></property>	
	   </bean>
	    <bean id="booksReviewsBusinessObject" class="co.srsp.hibernate.BookReviewsBusinessObjectImpl">
	   			<property name="sessionFactory" ref="bookReviewsHibernateSessionFactory"></property>	
	   </bean>
	   
	   <bean id="tagsBusinessObject" class="co.srsp.hibernate.TagsBusinessObjectImpl">
	   			<property name="sessionFactory" ref="bookReviewsHibernateSessionFactory"></property>	
	   </bean>
	   
	     <bean id="notificationsBusinessObject" class="co.srsp.hibernate.NotificationsBusinessObjectImpl">
	   			<property name="sessionFactory" ref="bookReviewsHibernateSessionFactory"></property>	
	   </bean>
	   
	   
	   
</beans>