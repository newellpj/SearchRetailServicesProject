<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	 xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">


   <security:http auto-config="true" use-expressions="true" create-session="always">
    <security:intercept-url pattern="/login" access="permitAll" />
    <security:intercept-url pattern="/compTest" access="permitAll" />
    <security:intercept-url pattern="/sendJMS" access="permitAll" />
	 <security:intercept-url pattern="/addAdmin" access="hasRole('ROLE_ADMIN')" />
	 <security:intercept-url pattern="/reviews" access="hasRole('ROLE_USER')" />
	 <security:intercept-url pattern="/reviewsSearchBook" access="hasRole('ROLE_USER')" />
     <security:intercept-url pattern="/reviewsAddBook" access="hasRole('ROLE_USER')" />
     <security:intercept-url pattern="/reviewsSearchDocs" access="hasRole('ROLE_USER')" />
     <security:intercept-url pattern="/reviewsReviewBook" access="hasRole('ROLE_USER')" />
     <security:intercept-url pattern="/retrieveNextSegment" access="hasRole('ROLE_USER')" />
     <security:intercept-url pattern="/getBookReviewsList" access="hasRole('ROLE_USER')" />
     <security:intercept-url pattern="/searchForBook" access="hasRole('ROLE_USER')" />
     <security:intercept-url pattern="/addNewBook" access="hasRole('ROLE_USER')" />
     <security:intercept-url pattern="/searchForDocs" access="hasRole('ROLE_USER')" />
     <security:intercept-url pattern="/getFeeds" access="hasRole('ROLE_USER')" />
     
     
     <security:intercept-url pattern="/searchNASA" access="hasRole('ROLE_USER')" />    
     <security:intercept-url pattern="/partialSearchForBook" access="hasRole('ROLE_USER')" />   
     
     <security:intercept-url pattern="/retrieveNextSearchDocsSegment" access="hasRole('ROLE_USER')" />
     <security:intercept-url pattern="/getPaginatedFeed" access="hasRole('ROLE_USER')" /> 
     <security:intercept-url pattern="/reviewsReviewBookNoneAdded" access="hasRole('ROLE_USER')" />
     <security:intercept-url pattern="/partialSearchForDocs" access="hasRole('ROLE_USER')" />  
     <security:intercept-url pattern="/updateSearchCriteriaAndPaginationOffset" access="hasRole('ROLE_USER')" />  
     
     
     
     
     <!--  this needs to change to has user role--> 
    
     
     
	  <security:access-denied-handler error-page="/accessDenied" />
		
		
		<security:form-login 
		    login-page="/login" 
		    default-target-url="/reviews" 
			authentication-failure-url="/login?error" 
			login-processing-url="/j_spring_security_check"
			username-parameter="username"
			password-parameter="password" 		
			authentication-success-handler-ref="myAuthenticationSuccessHandler"/>	
		
		<security:logout invalidate-session="true" logout-success-url="/logout" />	
		
		<security:session-management session-fixation-protection="migrateSession">
    		<security:concurrency-control expired-url="/logout" />
		</security:session-management>
		
	</security:http>
	

	
	<security:authentication-manager>
		<security:authentication-provider>
		    <security:password-encoder hash="bcrypt" />
			<security:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query=
					"select username,password,enabled from users where username=?"
					authorities-by-username-query=
					"select username, authority from authorities where username =?  "  />
		</security:authentication-provider>
	</security:authentication-manager>

<beans:bean id="myAuthenticationSuccessHandler"  class="co.srsp.config.SimpleUrlAuthenticationSuccessHandler" />

</beans>
